
package LoanApplication;

import Data.DBConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;

/**
 * This is the Loan Application Controller. It is used to handle
 * new loan applications and electronic signatures.
 * @author Chirs Lefebvre
 * @author Kristina Mantha
 */
public class LoanApplicationCntl {
    
    private DBConnection connect;
    private Statement myStmt;
    private ResultSet myRs;
    
    private int newLoanId;
    
    /**
     * Initial LoanApplicationCntl constructor.
     */
    public LoanApplicationCntl(){
        
    }
    /**    
     * @param docID represents a string that indicates what type of document to create
     * @return 
     */
     public void createLoan(int customerId, double princiaplAmount, 
            double currentTotal, double loanLength, double annualRate, 
            double singlePayment, String loanType){
        currentMaxLoanId(customerId);
        setConnect(new DBConnection());
        getConnect().init();
        try{
            String date;
            LocalDateTime now = LocalDateTime.now();
            date = DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT).format(now);
            System.out.println("The current date: " + date);

            //loan id is auto generated by sql database
            String query = "insert into loan"
                    + " values ("
                    + getNewLoanId() + ", "
                    + customerId + ", "
                    + princiaplAmount + ", " 
                    + currentTotal + ", " 
                    + loanLength + ", " 
                    + annualRate + ", "
                    + singlePayment + ", "
                    + "'" + date + "', "
                    + "'" + date + "', "
                    + "'True', "
                    + "'" + loanType + "')";
            
            setMyStmt(getConnect().getMyConnection().createStatement());
            getMyStmt().executeUpdate(query);        
        }catch(Exception e){      
            e.printStackTrace();
        }finally{
            getConnect().killConnections();           
        }
    }    
     public void currentMaxLoanId(int currentUserId){
        setConnect(new DBConnection());
        getConnect().init();
        try{
           String selectSql = "select max(loanId) as loanId from loan"; 
           
            setMyStmt(getConnect().getMyConnection().createStatement());
            setMyRs(getMyStmt().executeQuery(selectSql));
            
            while (getMyRs().next()){
                setNewLoanId(getMyRs().getInt("loanId"));
                
            }
            setNewLoanId(getNewLoanId() + 1);
            
        }catch (SQLException e){
            e.printStackTrace();
            System.out.println("Failed to create connection to azure database. conneciton = null");
		}
        finally{
            getConnect().killConnections();
        }
    }
    /**
     * @return the connect
     */
    public DBConnection getConnect() {
        return connect;
    }

    /**
     * @param connect the connect to set
     */
    public void setConnect(DBConnection connect) {
        this.connect = connect;
    }

    /**
     * @return the myStmt
     */
    public Statement getMyStmt() {
        return myStmt;
    }

    /**
     * @param myStmt the myStmt to set
     */
    public void setMyStmt(Statement myStmt) {
        this.myStmt = myStmt;
    }

    /**
     * @return the myRs
     */
    public ResultSet getMyRs() {
        return myRs;
    }

    /**
     * @param myRs the myRs to set
     */
    public void setMyRs(ResultSet myRs) {
        this.myRs = myRs;
    }

    /**
     * @return the newLoanId
     */
    public int getNewLoanId() {
        return newLoanId;
    }

    /**
     * @param newLoanId the newLoanId to set
     */
    public void setNewLoanId(int newLoanId) {
        this.newLoanId = newLoanId;
    }
}
